// Tasks to perform when no task is specified
defaultTasks 'clean', 'build', 'shadow'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'com.github.johnrengelman.shadow' // Provides dependency shading
apply plugin: 'license'

group = 'com.greatmancode'
version = '3.4.0-SNAPSHOT'
//archiveBaseName = "craftconomy3"
description = "Craftconomy3"
sourceCompatibility = 1.8
targetCompatibility = 1.8
ext.version = version

//Variables for signing & other stuff
ext.url = 'https://github.com/pavog/craftconomy3'
ext.bukkitVersion = '1.8.8-R0.1'


ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

def gitDescribe() {
    try {
        // determine git-describe output
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--always', '--dirty=*'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (e) {
        return "unknown"
    }
}

def getVersionName() {
    try {
        // determine git-describe output
        def version = gitDescribe()

        // add on jenkins or travis build information
        def jenkins_build = System.getenv("BUILD_NUMBER")
        def travis_build = System.getenv("TRAVIS_BUILD_NUMBER")
        if (jenkins_build != null) {
            version += "-b" + jenkins_build
        } else if (travis_build != null) {
            version += "-trv" + travis_build
        } else {
            version += "-dev"
        }

        return version
    } catch (e) {
        return "unknown-version"
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://hub.spigotmc.org/nexus/content/groups/public/" }
    maven { url "http://repo.visualillusionsent.net/repository/public/" }
    maven { url "https://libraries.minecraft.net" }
    maven { url "http://repo.spongepowered.org/maven" }
    maven { url "http://repo.mcstats.org/content/repositories/releases/" }

}

dependencies {
    compile group: 'com.zaxxer', name: 'HikariCP', version: '2.4.3'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.12'
    compile group: 'com.h2database', name: 'h2', version: '1.4.187'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.7.15-M1'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.spigotmc', name: 'spigot-api', version: '1.8.8-R0.1-SNAPSHOT'
    testCompile group: 'org.reflections', name: 'reflections', version: '0.9.9-RC1'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.12.6'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    // Dependencies for tools
    compileOnly group: 'org.spongepowered', name: 'spongeapi', version: '5.1.0'
    compileOnly group: 'net.milkbowl.vault', name: 'VaultAPI', version: '1.6'
    compileOnly group: 'be.maximvdw', name: 'MVdWPlaceholderAPI', version: '1.0.2-SNAPSHOT'
}

shadowJar {
    dependencies {
        include(dependency('com.zaxxer:HikariCP:2.6.1'))
        include(dependency('org.slf4j:slf4j-api:1.7.25'))
        include(dependency('org.slf4j:slf4j-simple:1.7.22'))
        include(dependency('com.h2database:h2:1.4.197'))
        include(dependency('com.googlecode.json-simple:json-simple:1.1.1'))
    }
    relocate 'com.zaxxer.hikari', 'com.greatmancode.com.zaxxer.libs.hikari'
    //relocate 'javassist', 'com.greatmancode.libs.javassist'
    relocate 'org.slf4j', 'com.greatmancode.libs.org.slf4j'
    //baseName = 'craftconomy3'
    classifier = ''
}

task filter(type: Copy) {
    from('src/main/resources') {
        exclude 'config.yml'
        exclude 'loader.yml'
    }
    expand(project.properties)
    into 'build/resources/main'
    def versionFinal = version + "-" + getVersionName()
    expand(version: versionFinal)
}

jar.dependsOn filter

license {
    header rootProject.file('HEADER.txt')
    ext.copyright = 'Copyright (c) 2018, Pavog'
    ext.url = 'http://github.com/pavog'
    ext.name = 'Craftconomy3'
    exclude "**/*.yml"
    exclude "**/*.class"
    exclude "**/*.project"
    exclude "**/*.classpath"
    ignoreFailures = true
}

// child script to publish to a maven repo
apply plugin: 'maven-publish'
apply plugin: 'maven'

// allow javadoc archive on Java 8 even if the javadoc isn't complete
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

// source jar
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

// javadoc jar
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}
artifacts {
    archives shadowJar, javadocJar, sourcesJar
}


uploadArchives {
    repositories {
        mavenDeployer {
            ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
            if (ext.isReleaseVersion) {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: System.getenv("sonatypeUsername"), password: System.getenv("sonatypePassword"))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: System.getenv("sonatypeUsername"), password: System.getenv("sonatypePassword"))
            }

            pom.project {
                name 'Craftconomy3'
                packaging 'jar'
                description 'Economy plugin for multiple Minecraft server implementation.'
                url 'https://github.com/Aztorius/craftconomy3'

                scm {
                    connection 'https://github.com/Aztorius/craftconomy3.git'
                    developerConnection 'https://github.com/Aztorius/craftconomy3.git'
                    url 'https://github.com/Aztorius/craftconomy3'
                }

                licenses {
                    license {
                        name 'LGPL v3'
                        url 'https://www.gnu.org/licenses/lgpl.html'
                    }
                }
                developers {
                    developer {
                        id 'greatman'
                        name 'William Lebel'
                        email 'lebelwilliam@gmail.com'
                    }
                    developer {
                        id 'aztorius'
                        name 'William Bonnaventure'
                        email 'informaticien77.fr@gmail.com'
                    }
                }
                repositories {
                    repository {
                        id 'spigot-repo'
                        url 'https://hub.spigotmc.org/nexus/content/groups/public/'
                    }
                    repository {
                        id 'canary-repo'
                        url 'http://repo.visualillusionsent.net/repository/public/'
                    }
                    repository {
                        id 'larry-repo'
                        url 'http://repo.larry1123.net/content/groups/public/'
                    }
                    repository {
                        id 'minecraft-repo'
                        url 'https://libraries.minecraft.net'
                    }
                    repository {
                        id 'sponge-repo'
                        url 'http://repo.spongepowered.org/maven'
                    }
                    repository {
                        id 'metrics-repo'
                        url 'http://repo.mcstats.org/content/repositories/releases/'
                    }
                }
            }
        }
    }
}
